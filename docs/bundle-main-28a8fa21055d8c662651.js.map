{"version":3,"sources":["webpack://App/webpack/bootstrap","webpack://App/./src/loadTexture.js","webpack://App/./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","loader","TextureLoader","url","onProgress","Promise","resolve","reject","load","container","camera","scene","renderer","light","controls","cubeCamera","sky","skyParameters","updateSun","theta","Math","PI","phi","position","x","cos","y","sin","z","material","uniforms","copy","update","onWindowResize","aspect","innerWidth","innerHeight","updateProjectionMatrix","setSize","mainLoop","render","raf","all","loadTexture","then","tRed","tBlue","redMat","SpriteMaterial","map","transparent","blueMat","document","getElementById","WebGLRenderer","setPixelRatio","devicePixelRatio","outputEncoding","sRGBEncoding","appendChild","domElement","Scene","PerspectiveCamera","set","DirectionalLight","add","CubeCamera","background","renderTarget","Sky","texture","OrbitControls","maxPolarAngle","target","minDistance","maxDistance","enableDamping","dampingFactor","addEventListener","sprite","Sprite","random","SPHERE_AREA","scale"],"mappings":"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","file":"bundle-main-28a8fa21055d8c662651.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpApp\"] = window[\"webpackJsonpApp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([8,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// Instantiate a loader\nimport { TextureLoader } from \"three\";\n\nconst loader = new TextureLoader();\n\nexport default function(url, onProgress = null)\n{\n    return new Promise(((resolve, reject) => {\n        // Load a glTF resource\n        loader.load(\n            // resource URL\n            url,\n            // called when the resource is loaded\n            resolve,\n            // called while loading is progressing\n            onProgress,\n            // called when loading has errors\n            reject\n        );\n\n    }))\n}\n","import raf from \"raf\"\n// noinspection ES6UnusedImports\nimport STYLE from \"./style.css\"\nimport {\n    CubeCamera,\n    DirectionalLight,\n    PerspectiveCamera,\n    Scene,\n    Sprite,\n    SpriteMaterial,\n    sRGBEncoding,\n    WebGLRenderer\n} from \"three\"\n\nimport { Sky } from \"three/examples/jsm/objects/Sky.js\";\n\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport loadTexture from \"./loadTexture\";\n\n\nconst SKY_EFFECT = true;\n\nlet container, stats, envMap;\nlet camera, scene, renderer, light;\nlet controls;\n\n\nconst skyParameters = {\n    distance: 1000,\n    inclination: 0.42,\n    azimuth: 0.1\n};\n\n\nfunction updateSun()\n{\n\n    if (!sky)\n    {\n        return;\n    }\n\n    const theta = Math.PI * (skyParameters.inclination - 0.5);\n    const phi = 2 * Math.PI * (skyParameters.azimuth - 0.5);\n\n    light.position.x = skyParameters.distance * Math.cos(phi);\n    light.position.y = skyParameters.distance * Math.sin(phi) * Math.sin(theta);\n    light.position.z = skyParameters.distance * Math.sin(phi) * Math.cos(theta);\n\n    sky.material.uniforms[\"sunPosition\"].value = light.position.copy(light.position);\n\n    cubeCamera.update(renderer, sky);\n\n}\n\n\nlet cubeCamera, sky;\n\n\n\n\n\nfunction init()\n{\n\n    container = document.getElementById(\"container\");\n\n    //\n\n    renderer = new WebGLRenderer();\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.outputEncoding = sRGBEncoding\n    container.appendChild(renderer.domElement);\n\n    //\n\n    scene = new Scene();\n\n    camera = new PerspectiveCamera(55, window.innerWidth / window.innerHeight, 1, 20000);\n    camera.position.set(25, 25, 100);\n\n    //\n\n    light = new DirectionalLight(\"#fff8d5\", 0.8);\n    scene.add(light);\n\n    cubeCamera = new CubeCamera(0.2, 1, 512);\n    // cubeCamera.renderTarget.texture.generateMipmaps = true;\n    // cubeCamera.renderTarget.texture.minFilter = LinearMipmapLinearFilter;\n\n    scene.background = cubeCamera.renderTarget;\n\n    // Skybox\n    if (SKY_EFFECT)\n    {\n        sky = new Sky();\n\n\n        // uniforms[\"turbidity\"].value = 5;\n        // uniforms[\"rayleigh\"].value = 1.2;\n        // uniforms[\"luminance\"].value = 1;\n        // uniforms[\"mieCoefficient\"].value = 0.05;\n        // uniforms[\"mieDirectionalG\"].value = 0.9;\n\n        envMap = cubeCamera.renderTarget.texture\n\n        updateSun();\n    }\n    else\n    {\n        envMap = null;\n    }\n\n    controls = new OrbitControls(camera, renderer.domElement);\n    //controls.maxPolarAngle = Math.PI * 0.45;\n    controls.maxPolarAngle = Math.PI;\n    controls.target.set(0, 0, 0);\n    controls.minDistance = 0.0;\n    controls.maxDistance = 150.0;\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.02;\n    controls.update();\n\n    // stats = new Stats();\n    // container.appendChild( stats.dom );\n\n    // GUI\n\n    //const gui = new GUI();\n\n    // const folder = gui.addFolder( \"Sky\" );\n    // folder.add( skyParameters, \"inclination\", 0, 0.5, 0.0001 ).onChange( updateSun );\n    // folder.add( skyParameters, \"azimuth\", 0, 1, 0.0001 ).onChange( updateSun );\n    // folder.open();\n    //\n    // const uniforms = water.material.uniforms;\n    //\n    // const folder = gui.addFolder( \"Water\" );\n    // folder.add( uniforms.distortionScale, \"value\", 0, 8, 0.1 ).name( \"distortionScale\" );\n    // folder.add( uniforms.size, \"value\", 0.1, 10, 0.1 ).name( \"size\" );\n    // folder.add( uniforms.alpha, \"value\", 0.9, 1, .001 ).name( \"alpha\" );\n    // folder.open();\n\n    window.addEventListener(\"resize\", onWindowResize, false);\n\n}\n\n\nfunction onWindowResize()\n{\n\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n}\n\n\nlet inclinationCount = 0;\n\n\nfunction mainLoop()\n{\n\n    render();\n    //stats.update();\n\n    //skyParameters.inclination = -0.012 + Math.sin(inclinationCount += 0.01) * 0.524;\n\n    updateSun();\n\n    controls.update()\n    raf(mainLoop);\n\n}\n\nfunction render()\n{\n    renderer.render(scene, camera);\n}\n\nconst NUM_SPHERES = 100;\n\n// scale of each sphere\nconst SPHERE_SCALE = 10;\n\n// size of the random sphere spawn area\nconst SPHERE_AREA = 120;\n\nraf(() => {\n\n    Promise.all([\n        loadTexture(\"assets/red-sphere.png\"),\n        loadTexture(\"assets/blue-sphere.png\")\n    ])\n    .then(([ tRed, tBlue ]) =>\n    {\n\n        const redMat = new SpriteMaterial({\n            map: tRed,\n            transparent: true,\n        });\n\n\n        const blueMat = new SpriteMaterial({\n            map: tBlue,\n            transparent: true,\n        });\n\n        init();\n\n        const half = SPHERE_AREA/2;\n\n        for (let i=0; i < NUM_SPHERES; i++)\n        {\n            const sprite = new Sprite(Math.random() < 0.5 ? redMat : blueMat);\n            scene.add(sprite);\n            sprite.position.set(\n                Math.random() * SPHERE_AREA - half,\n                Math.random() * SPHERE_AREA - half,\n                Math.random() * SPHERE_AREA - half\n            );\n            sprite.scale.set(SPHERE_SCALE, SPHERE_SCALE, SPHERE_SCALE);\n        }\n\n        mainLoop();\n\n    })\n\n})\n\n"],"sourceRoot":""}